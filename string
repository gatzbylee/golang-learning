package main
import(
	"fmt"
	"strconv"
	"strings"
)

var str string = "hello你好"
func main(){
	// for i := 0; i < len(str); i++{
	// 	fmt.Printf("string is = %q\n", str[i])    %q来输出中文并不行        
	// }
	// s := []rune(str)
	// for i := 0; i<len(str); i++{
	// 	fmt.Println("string is = ", s[i])   切片是引用类型，不能这种输出
	// }
	s := []rune(str)   //转成切片类型
	fmt.Printf("s type is %T\n", s)
	for i := 0; i<len(s); i++{
		fmt.Printf("string is = %c\n", s[i])
	}

	str2 := "123"
	s2, err := strconv.Atoi(str2)         
	//err不是数值，不能用!err。strconv.Atoi即字符转数值，它返回两个，所以要用两个变量接收
	if err != nil{
		println("error!")
	} else{
		fmt.Printf("s2 type->%T, s2 = %v\n", s2, s2)
	}

	str3 := 123
	s3 := strconv.Itoa(str3)        //这个Itoa倒是返回一个，要和Atoi区别
	fmt.Printf("s3 type->%T, s3 = %v\n", s3, s3)

	str4 := "nihao号"   //"号"占三字节,对应229 143 183
	s4 := []byte(str4)
	fmt.Printf("s4 type is %T, s4 = %v\n", s4, s4)  //s4 type is []uint8, s4 = [110 105 104 97 111 229 143 183]

	var v int64= 1234             //FormatInt是Int64位的
	v1 := strconv.FormatInt(v, 2)  //2进制转换
	v2 := strconv.FormatInt(v, 16)  //16进制转换
	fmt.Printf("v1 type is %T, v1 = %v\n;v2 type is %T, v2 = %v\n", v1, v1, v2, v2)

	str5 := "seafood"
	fmt.Println("does has foo?", strings.Contains(str5, "foo"))     //判断字符串是否含有指定的子串
	fmt.Println("how many does it have 'o'?", strings.Count(str5, "o")) //判断子串的个数
	//strings.EqualFold(str1, str2) 不区分大小写比较是否相等
	//strings.Index(str1, str2) str2为子串，判断子串的位置（第一次出现的），如果没有返回-1
}
